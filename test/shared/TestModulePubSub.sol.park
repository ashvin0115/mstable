pragma solidity ^0.5.0;

import "truffle/Assert.sol";
import "./mocks/MockShared.sol";
import "./mocks/MockPub.sol";

import "./mocks/ModuleA.sol";
import "./mocks/ModuleB.sol";
import "./mocks/ModuleC.sol";

contract TestModulePubSub is MockShared {

    function testPubSub() public {
        // Arrange
        MockPub myPub = new MockPub();

        // Act
        ModuleA moduleA = myPub.createModuleA();
        ModuleB moduleB = myPub.createModuleB();
        ModuleC moduleC = myPub.createModuleC();

        // Assert
        Assert.isTrue(moduleA.moduleB() == moduleB, "module A should refer to module B");
        Assert.isTrue(moduleA.moduleC() == moduleC, "module A should refer to module C");
        Assert.isTrue(moduleB.moduleC() == moduleC, "module B should refer to module C");
    }
}
